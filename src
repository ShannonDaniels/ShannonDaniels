// Moter Driver (L298N)
// The two motors on the right(From rear view) will be called motor A or Right motor
// The two motors on the left(From rear view) will be called motor B or Left motor

int IN1 = 7;
int IN2 = 6;
int IN3 = 5;
int IN4 = 4;
int enA = 9;
int enB = 3;
int motor_speed = 150;
int Turn_speed = 255;

// Variables for the Distance Sensor (HC_SR04)
int trigPin = 10;
int echo = 11;
long distance = 0;
long duration;

// bluetooth Module
char t;
int bluetooth_Vcc = 2;

void setup()
{
  // put your setup code here, to run once:
  Serial.begin(9600);
  pinMode (IN1, OUTPUT);
  pinMode (IN2, OUTPUT);
  pinMode (IN3, OUTPUT);
  pinMode (IN4, OUTPUT);
  pinMode (enA, OUTPUT);
  pinMode (enB, OUTPUT);
  pinMode (trigPin, OUTPUT);
  pinMode (echo, INPUT);
  pinMode (bluetooth_Vcc, OUTPUT);
}

void loop()
{
  // Check for data in the serial monitor
  // And if there is store it in a char variable t.

  if ( Serial.available())
  {
    t = Serial.read();
    Serial.println(t);
  }
  // Send a pulse to the trigger pin of the ultrasonic sensor
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  digitalWrite(bluetooth_Vcc, HIGH);

  // Calculate the distance between the car and any object
  duration = pulseIn(echo, HIGH);
  distance =  (duration / 2) / 29.1;


  if (distance < 10)
  {
    lessthan_10();
  }

  // (distance >= 10)
  else
  {
    greaterthan_10();
  }
}

void lessthan_10()
{
  //  Reverse
  // Reverse the car by rotating both motors in counter-clockwise
  if (t == 'G')
  {
    analogWrite(enA, motor_speed);
    digitalWrite (IN1, HIGH);
    digitalWrite (IN2, LOW);

    analogWrite(enB, motor_speed);
    digitalWrite (IN3, LOW);
    digitalWrite (IN4, HIGH);
    delay(4600);
  }

  else
  {
    analogWrite(enA, motor_speed);
    analogWrite(enB, motor_speed);
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, LOW);
    digitalWrite(IN4, LOW);
  }
}


void greaterthan_10 ()
{
  // Forward
  // Move the car forward by rotating both motor A and motor B in clockwise
  if (t == 'F')
  {
    analogWrite(enA, motor_speed);
    digitalWrite (IN1, LOW);
    digitalWrite (IN2, HIGH);

    analogWrite(enB, motor_speed);
    digitalWrite (IN3, HIGH);
    digitalWrite (IN4, LOW);

  }

  //  Reverse
  // Reverse the car by rotating both motors in counter-clockwise
  else if (t == 'G')
  {
    analogWrite(enA, motor_speed);
    digitalWrite (IN1, HIGH);
    digitalWrite (IN2, LOW);

    analogWrite(enB, motor_speed);
    digitalWrite (IN3, LOW);
    digitalWrite (IN4, HIGH);
  }

  // Left Turn
  // left moter is off but right side motor rotate clockwise)
  else if (t == 'L')
  {
    analogWrite(enA, Turn_speed);
    digitalWrite (IN1, LOW);
    digitalWrite (IN2, HIGH);
    digitalWrite (IN3, LOW);
    digitalWrite (IN4, LOW);
  }

  //  Right Turn
  // Right side motor is off and left side motor rotates clockwise)
  else if (t == 'R')
  {
    analogWrite(enA, Turn_speed);
    digitalWrite (IN1, LOW);
    digitalWrite (IN2, LOW);

    analogWrite(enB, Turn_speed);
    digitalWrite (IN3, HIGH);
    digitalWrite (IN4, LOW);
  }

  // STOP
  // Stops the car by turing off power to Motor A and B
  else if (t == 'S')
  {
    analogWrite(enA, Turn_speed);
    analogWrite(enB, Turn_speed);
    digitalWrite(IN1, LOW);
    digitalWrite(IN2, LOW);
    digitalWrite(IN3, LOW);
    digitalWrite(IN4, LOW);
  }
}
